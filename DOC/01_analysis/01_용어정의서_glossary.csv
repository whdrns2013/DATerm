No,도메인,용어,설명,영문,약어,비고
1,,시큐어 셸,"네트워크를 통해 컴퓨터 간에 암호화된 안전한 연결을 설정하는 프로토콜. 원격 컴퓨터에 로그인하여 명령을 실행하거나 파일을 전송하는 등 안전하게 시스템을 제어할 수 있게 해 주며, TCP 포트 22번을 사용하고 데이터의 인증, 암호화, 무결성을 제공하여 통신을 보호한다. ",secure shell,ssh,
2,,터미널 네트워크(텔넷),"TCP/IP 네트워크를 통해 원격 컴퓨터에 접속하고 명령을 실행할 수 있게 하는 텍스트 기반의 네트워크 프로토콜이자 프로그램. 원격 시스템의 명령줄 인터페이스에 접속할 수 있도록 가상 터미널 기능을 제공하며, 포트 번호 23번을 사용한다. 하지만, 데이터가 암호화되지 않고 평문으로 전송되기 때문에 보안 취약점이 있어 민감한 정보를 다룰 때는 사용하지 않으며, 네트워크 포트 상태 확인 등 보안에 민감하지 않은 작업에 주로 활용된다.",terminal network,telnet,
3,,파일 전송 통신 규약,"TCP/IP 네트워크를 통해 한 컴퓨터에서 다른 컴퓨터로 파일을 전송하기 위한 표준 통신 프로토콜. 이 프로토콜을 통해 클라이언트와 서버 간에 파일을 업로드하거나 다운로드할 수 있다. 서버에 파일을 업로드하거나 서버에서 파일을 다운로드하는 등 파일의 이동과 관리에 주로 사용되며, 웹사이트 주소, 사용자 계정, 비밀번호를 이용해 서버에 접속해 파일을 전송한다. 파일 전송을 위해 두 개의 연결(Command port, Data port)을 사용하며, FTP는 기본적으로 21번 포트에서 동작한다. ",file transfer protocol,ftp,
4,,시큐어 셸 파일 전송 통신 규약,"네트워크를 통해 파일을 안전하게 전송하는 데 사용되는 프로토콜이다. 암호화된 SSH(Secure Shell) 연결을 기반으로 데이터 전송과 파일 관리를 안전하게 수행할 수 있도록 지원하며, 기존의 FTP보다 보안성이 강화되어 데이터를 보호한다. ",ssh file transfer protocol,sftp,
5,,셸,"운영체제에서 커널과 이용자 사이에서 이용자의 명령을 해석하고 그 처리 결과를 반환하는, 인터페이스를 제공하는 시스템 프로그램이다. 셸(껍데기의 영어 단어)은 사용자와 운영 체제의 내부(커널) 사이의 인터페이스를 감싸는 층이기 때문에 그러한 이름이 붙었다. 셸은 일반적으로 명령 줄과 그래픽 형의 두 종류로 분류된다. 명령 줄 셸은 운영 체제 상에서 명령 줄 인터페이스(CLI)를 제공하는 반면에, 그래픽 셸은 그래픽 사용자 인터페이스(GUI)를 제공한다.",shell,,
6,,확장 가능,"시스템이나 서비스가 증가하는 작업량, 사용자 수, 데이터 양 등을 효율적으로 처리할 수 있도록 확장하는 것이 가능함을 의미하는 단어",scalable,,
7,,프로토콜,"컴퓨터 네트워크에서 데이터를 주고받기 위한 규칙과 절차의 집합. 이 규칙은 데이터를 어떻게 포맷하고, 전송하고, 수신할지를 정의한다. ssh, telnet, ftp, sftp는 각기 다른 목적을 위해 만들어진 프로토콜이다. ssh는 원격 시스템에 안전하게 접속하여 터미널을 사용하거나 명령을 실행하는 데 사용되는 프로토콜, telnet은 원격 시스템에 접속하여 터미널을 사용하는 데 사용되는 프로토콜, ftp와 sftp는 파일 전송을 위해 사용되는 프로토콜이다.",protocol,,통신 규약
8,,변환기,"호환되지 않는 두 개체 사이를 연결하여 서로 통신할 수 있도록 만들어 주는 중간 매개체를 의미한다. 특정 인터페이스에 맞게 다른 인터페이스를 변환해 주는 디자인 패턴을 의미하며,  본 프로그램에서는 터미널 프로그램의 내부 인터페이스와 외부 프로토콜 간의 변환 및 연결 역할을 수행한다는 의미를 가진다.",adapter,,
9,,플러그인,"플러그인은 주 프로그램에 새로운 기능을 추가하기 위해 독립적으로 개발되는 소프트웨어 컴포넌트다. 사용자가 필요에 따라 추가하거나 제거할 수 있어, 프로그램의 유연성과 확장성을 높여준다. 터미널 프로그램에 다양한 프로토콜을 지원하고 싶을 때, 각 프로토콜을 별도의 플러그인으로 만들 수 있다.",plugin,,
10,,아키텍처,특정 시스템의 구성 원리와 동작 방식을 나타내는 설계의 원칙. 설계도나 청사진을 의미한다.,architecture,,
11,,컴포넌트,,component,,
12,,모듈,,module,,
13,,세션,"컴퓨터 과학에서, 특히 네트워크 분야에서 반영구적이고 상호작용적인 정보 교환을 전제하는 둘 이상의 통신 장치나 컴퓨터와 사용자 간의 대화나 송수신 연결상태를 의미하는 보안적인 다이얼로그(dialogue) 및 시간대를 가리킨다. 여기서는 두 엔티티(예: 터미널 ↔ 원격 서버) 사이에 맺어진 연결의 “상태와 컨텍스트, 수명주기, 자원""을 나타내는 단위를 가진다. 사용자 관점에서는 탭 하나가 세션 하나일 수 있으며 (예: PuTTY, SecureCRT, VS Code Remote Terminal) 동시에 여러 세션을 열어두고 전환하거나, 워크스페이스에 묶어 관리할 수 있다.",session,,
14,,세션 상태,"세션의 두 엔티티 간 연결의 상태를 의미한다. 생성(created), 연결 중(connecting), 연결됨(established), 종료됨(closed), 재연결중(reconnecting) 과 같은 상태가 있을 수 있다.",session state,,
15,,세션 생명주기,"세션이 만들어지고, 연결되고, 종료되어 소멸하는 세션의 일련의 상태 변화를 지칭한다.",session lifecycle,,
16,,세션 컨텍스트,"세션이 어떤 연결 정보를 가지고 연결했는지, 세션을 이루는 두 통신 주체는 누구인지, 어떤 인증 수단을 썼는지, 어떤 환경 변수를 가지고 있는지 등의 세션의 맥락 정보를 의미한다.",session context,,맥락 정보
17,,세션 자원,"세션을 구성하는 네트워크 소켓, 암호화 채널, 프로세스 핸들(PTY), 로깅 핸들러 등의 자원. 세션이 종료되면 이 자원들을 반드시 정리해야 한다. (메모리/보안 상 이유)",session resource,,
18,,연결,"세션을 이루는 두 객체(인스턴스) 사이의 물리적인 통신 통로가 이어진 상태, 또는 통신 통로를 잇는 작업을 지칭한다. 예를 들어 TCP/IP 프로토콜 스택에서는 IP 주소와 포트 번호를 기반으로 두 호스트 간에 데이터가 오갈 수 있는 통신 통로를 설정하는 것을 의미한다. 세션에서 두 객체(인스턴스) 간 상호작용을 하기 위해서는 연결을 통해 연결됨 상태가 되어야 한다.",connection,,
19,,템플릿,"다른 객체의 기반이 되거나 파생되는 일반화된 모델 이나 패턴, 기반이 되는파일이나 문서.",template,,
20,,연결 템플릿,"세션을 만들기 위해 클라이언트가 서버와 연결을 하기 위해 알아야 하는 정보들을 담은 템플릿. 호스트 IP, 통신 Port, 계정, 키 등이 있다.",connection template,,
21,,연결 그룹,하나 이상의 연결 템플릿들을 모아놓은 그룹.,connection group,,
22,,보안,"세션을 만들기 위한 연결 구성 작업이나 세션이 만들어진 뒤 통신을 하는 중에 일어나는 여러 작업에서 이루어지는 보안 작업을 총칭한다. 연결을 만들기 위해 클라이언트가 자신이 서버와 통신할 수 있는 충분한 자격이나 권한을 가졌다는 것을 증명하는 자격 증명이나, 클라이언트의 자격 증명 정보를 안전하게 보관하는 것, 또는 세션을 이루는 두 인스턴스가 각자 메시지를 발송하고 받을 때 메시지의 내용을 타인이 볼 수 없게 암호화 하는 작업 등이 포함될 수 있다.",security,,
23,,자격 증명,"사용자(클라이언트)가 자신의 신원을 증명하기 위해 서버에게 제출하는 정보. 자신의 정보나 증명서(예: 아이디와 비밀번호, 토큰, 인증서)등이 자격 증명에 해당하며, 클라이언트는 이를 서버에게 제출하는 행위를 통해 자신이 연결이나 통신을 하기 위한 적법한 자격이 있음을 증명한다.",credential,,
24,,인증,자격증명을 통해 사용자가 주장하는 신원이 진짜인지 확인하는 과정,authentication,,
25,,비밀정보,"시스템이 안전하게 보호·관리해야 하는 민감한 인증/보안 데이터. 계정정보, 비밀번호, 키, 토큰, 인증서 등이 이에 해당한다.",secret,,
26,,비밀정보 관리자,"비밀정보를 안전하게 secret store 혹은 secret repository에 보관할 수 있도록 요청하거나, 비밀정보를 안전하게 불러오거나, 불러온 비밀정보를 연결과 통신 작업에서 안전하게 사용할 수 있도록 제공하는 역할을 한다.",secret manager,,
27,,호스트,"네트워크 호스트를 의미하며, 여기서는 클라이언트가 접속할 서버를 뜻한다.",host,,
28,,검증,"어떤 정보나 정보의 집합이 사전에 정의된 명세, 규칙, 요구사항 혹은 현재의 사실과 일치하는지 확인하는 과정",verification,,
29,,호스트 검증,"클라이언트가 연결하려는 호스트가 이전에 이미 알고 있는 호스트와 일치하는지, 혹은 자신이 연결하려는 호스트가 진짜 맞는지를 확인하는 과정",host verification,,
30,,암호화,세션을 이루는 두 객체(인스턴스) 및 그에 준하는 자격을 가진 이가 아닌 제 3자가 세션과 관련된 여러 정보 혹은 통신 내용을 알아볼 수 없도록 정보(평문)을 특수한 알고리즘 등을 통해 읽을 수 없도록 하는 과정. 충분한 자격을 가진 이가 암호화된 정보를 읽으려면 미리 계약된 규칙 혹은 알고리즘에 따라 해독(복호화)를 거친다.,encryption,,
31,,사용자 계정,"컴퓨터 시스템이나 서비스에 접근하고 이용하기 위해 필요한 고유한 정보 집합. 사용자의 계정은 사용자가 시스템에 인증하고, 잠재적으로 해당 시스템이 제공하거나 연결된 리소스에 접근할 수 있도록 허가를 받을 수 있게 한다. 계정에 로그인하려면 일반적으로 사용자는 회계, 보안, 로깅 및 자원 관리를 위해 비밀번호 또는 기타 자격 증명으로 자신을 인증해야 한다.",user account,account,
32,,생성 조회 갱신 삭제,"컴퓨터 소프트웨어의 기본적인 4가지 데이터 처리 기능. 생성(Create), 읽기(Read), 갱신(Update), 삭제(Delete)가 그것이다. 이는 영구적인 저장소에 데이터를 저장, 조회, 수정, 삭제하는 작업을 통칭하는 용어로, 대부분의 애플리케이션에서 필수적인 기능이다.",create retrieve update delete,crud,
33,,저장소,데이터 집합을 체계적으로 보관하고 유지하는 중앙 장소. 데이터 자체를 접근 가능한 저장 장소에 모으는 것일 수도 있고 데이터를 선택적으로 추출하는 기능을 의미할 수도 있음.,repository,repo,
34,,이벤트 버스,"여러 컴포넌트(프로그램의 구성 요소)가 서로 직접 연결되지 않고도 이벤트를 주고받을 수 있게 해주는 통신 매커니즘. 하나 이상의 컴포넌트(구성 요소 혹은 애플리케이션)과 중앙의 이벤트 버스로 이루어진다. 이벤트가 발생하면 이벤트 버스로 보내지고, 버스는 이 이벤트를 필요한 다른 컴포넌트(게시자 또는 수신자)에게 전달하여 통신을 중계하는 역할을 한다. 이러한 아키텍처를 적용하면 느슨한 결합, 게시-구독 패턴 (Pub-Sub Pattern), 비동기 통신 등의 특징을 가지게 된다.",event bus,,
35,,커맨드 버스,"소프트웨어 아키텍처 패턴의 하나로, 커맨드 버스가 요청(Command, 애플리케이션에서 상태를 변경하는 요청)을 해당 커맨드를 처리할 핸들러로 전달하는 통로 역할을 하는 패턴. 하나 이상의 컴포넌트(구성 요소, 애플리케이션)와 커맨드 버스로 구성된다. 커맨드 버스는 애플리케이션의 다양한 부분에서 발생하는 커맨드 메시지를 적절한 처리기로 보내 데이터 변경을 유도하며, 이는 시스템의 구조를 명확히 하고 유지보수성을 향상시키는 데 기여한다. 명령과 처리가 분리되는 특징을 가진다. (이는 특히 CQRS 패턴에서 핵심적으로 사용된다.)",command bus,,
36,,로그,이벤트에 대한 연대순 기록(레코드),log of event,log,
37,,로깅,"문제, 오류 또는 현재 운영에 대한 광범위한 정보 와 같이 컴퓨터 시스템에서 발생하는 이벤트 의 로그를 만들거나 추가하거나 유지하는 행위.",logging,,
38,,구조,"데이터가 가져야 할 구조와 제약 조건을 명세한 규칙 집합. 어떤 필드가 존재해야 하는지, 필드 타입은 무엇인지, 필수/선택은 무엇인지, 값의 제약은 무엇인지까지 포함한다.",schema,,
39,,설정 구조,사용자가 바꿀 수 있는 설정 항목과 항목에 대한 값 쌍들이 가져야 하는 데이터의 구조와 제약을 정의한 설계도,setting schema,,
40,,템플릿 구조,연결 템플릿 등 여러 템플릿이 가지는 항목과 항목에 대한 값 쌍들이 가져야 하는 데이터의 구조와 제약을 정의한 설계도,template schema,,
41,,설정 검증,사용자가 가진 설정 구조의 항목과 항목에 대한 값 쌍들이 적절한 구조와 제약조건을 준수하는지를 확인하는 과정 혹은 행위,setting verification,,
42,,템플릿 검증,사용자가 가진 템플릿 구조의 항목과 항목에 대한 값 쌍들이 적절한 구조와 제약조건을 준수하는지를 확인하는 과정 혹은 행위,template verification,,
43,,마이그레이션,이주. 하나의 환경에서 다른 환경으로 이주하는 것을 의미한다.,migration,migration,
44,,구조 마이그레이션,"구조(스키마)의 변경사항을 관리하는 행위 중 하나로, 스키마 마이그레이션은 설정 구조(스키마)나 템플릿 구조(스키마)를 최신 버전으로 업데이트 하거나 이전 버전으로 되돌릴 필요가 있을 때 수행된다.",schema migration,,
45,,연결 서비스,세션을 만들기 위한 연결 구성 작업과 관련된 여러 로직을 처리하는 서비스.,connection service,,
46,,요청,클라이언트가 서버에게 특정 동작을 요구하는 메시지 또는 메시지를 통해 특정 동작을 요구하는 행위,request,,
47,,처리,"클라이언트의 요청(Request)을 해석하고, 내부 로직(DB 조회, 비즈니스 로직 실행 등)을 수행하는 단계로, 외부적으로는 직접 노출되지 않고, 요청과 응답 사이에 있는 “서버 내부 동작”이다.",processing,,
48,,응답,서버가 요청을 처리한 뒤 결과를 클라이언트에게 돌려주는 메시지 또는 메시지를 보내는 행위,response,,
49,,재연결,"서버와 클라이언트 간의 통신 채널을 복원하는 것을 의미한다. 전통적인 의미로는 이미 연결되어 있던 것을 다시 연결하는 것이나, 이전에 연결되었으나 현재는 연결이 끊긴 것을 다시 연결하는 것을 의미한다. 이는 주로 네트워크 연결, 기기 연결, 혹은 프로그램 간의 연결 등 다양한 상황에서 사용될 수 있다. 예를 들어, 와이파이 연결이 끊겼을 때 다시 연결하거나, 이전에 페어링했던 블루투스 기기를 다시 연결하는 경우등이 이에 해당한다.",reconnect,,
50,,재시도,"특정 작업(Operation)이나 요청(Request)이 실패했을 때, 그 작업을 다시 실행하는 것을 말한다.",retry,,
51,,전송,"메모리 매체 간 데이터 이동. 여기서는 주로 파일 전송을 의미하며, 파일 전송은 통신 채널을 통해 한 컴퓨터 시스템에서 다른 컴퓨터 시스템으로 컴퓨터 파일을 전송하는 것을 말한다. 일반적으로 파일 전송은 통신 프로토콜을 통해 이루어지며 FTP, SFTP, SCP, HTTP, P2P 등의 프로토콜이 있다.",transfer,,
52,,전송 서비스,"메모리 매체 간 데이터 이동, 특히 여기서는 주로 파일 전송을 다루는 로직을 의미한다.",transfer service,,
53,,업로드,"네트워크 수단을 통해 한 컴퓨터 시스템으로부터 다른 시스템에 데이터 (파일 등)를 전송하는 것으로, 다운스트림 노드에서 업스트림 노드로 향하는 방향의 전송을 말한다.",upload,,
54,,다운로드,"네트워크 수단을 통해 로컬 시스템이 원격 시스템으로부터 데이터를 받는 것을 의미한다. 관련 개념인 스트리밍과는 다르다. 스트리밍은 데이터를 전송받는 도중에 전송받은 데이터를 거의 즉시 사용하며, 보통 데이터를 오랜 기간 저장하지 않는다. 하지만 다운로드는 데이터를 전부 다 전송받은 뒤 사용할 수 있다.",download,,
55,,설정,"사용자가 자신의 경험을 바꾸기 위해 조정하는 옵션을 뜻한다. 최종 사용자가 직접 변경하며 개인화, 선호도와 관련이 있다. 실행 중에도 바뀔 수 있다.",setting,,
56,,구성 설정,시스템이 동작하기 위해 필요한 설정값 또는 설정하는 행위를 뜻함. 환경·시스템 중심의 불변/반불변 설정을 가리킨다. 앱 시작 시 로딩되는 경우가 많다.,config,,
57,,테마,"컴퓨팅에서 그래픽 배색에 대한 자세한 정보를 담고 있는 프리셋 꾸러미를 말한다. 보통 운영 체제, 위젯 세트, 창 관리자의 룩 앤 필을 사용자가 직접 수정하기 위해 사용된다. 작업 표시줄, 창 테두리, 시간 포맷부터 단추, 스크롤바, 목록 요소의 겉부분(유리 같이 보이는 누름 단추나 사각 단추 등)까지 다양한 요소를 조절하는 경우도 있다.",theme,,
58,,언어 설정,프로그램에서 표현하는 각 기능이나 항목에 대한 설명을 어떤 언어를 통해 표현할지 선택하는 것,language setting,,
59,,키 조합,"키보드의 특정 키 조합을 특정 동작(명령)에 연결하는 것을 의미한다. 사용자가 키보드 단축키를 통해 특정 기능을 신속하게 실행할 수 있게 하여 작업 속도를 높이고 편의성을 증대시킨다. 예를 들어, Ctrl+S를 '저장' 동작에 연결하는 것이 일반적인 키 바인딩이며, 사용자는 이 설정을 통해 자체적으로 키보드 단축키를 커스터마이징할 수 있다.",key binding,,
60,,소프트웨어 기능,"소프트웨어 시스템 또는 시스템들의 눈에 띄거나 독특한 측면, 품질 또는 특성. 쉽게 말해 소프트웨어가 제공할 수 있는 특징적인 기능을 지칭한다.",software feature,,
61,,확장,기존의 것 외로 넓혀가는 것,extension,,
62,,확장 기능,"프로그램의 주요 기능 외로 덧붙이는 부가적인 유틸성 기능들. 이는 프로그램에 없던 기능을 추가하는 것으로, 기존 기능의 성능을 향상시키거나 혹은 사용자의 편의를 위한 특정 작동을 하기도 한다.",feature extension,,
63,,문서 편집기,문서 파일을 편집하기 위해 쓰이는 소프트웨어. 이진 형식이 아닌 사람이 읽을 수 있는 텍스트 형식 파일을 읽고 간단한 조작으로 편집하여 저장할 수 있는 컴퓨터의 가장 기본적인 소프트웨어 중 하나,text editor,,
64,,메모,어떠한 내용을 기록하는 것으로써 기억을 돕는 문서 또는 그 외의 통신정보전달수단. 여기에서는 사용자가 간단한 텍스트를 쓰고 저장할 수 있는 기능을 가리킨다.,memo,,
65,,작업 공간,"여러 개의 터미널 탭이나 창을 그룹화해 관리하는 공간, 그리고 그 공간을 구성하고 이용하게 하는 기능을 의미한다. 개발자나 시스템 관리자 등 사용자가 여러 작업을 동시에 수행할 때 효율성을 높인다.",workspace,,
66,,조합,작업 공간을 구성하는 여러 탭이나 창들의 조합을 의미한다.,combination,,검토 필요
67,,사전 설정,"응용 소프트웨어, 컴퓨터 프로그램 등에 자동으로 할당되는 설정이나 값. 여기서는 사전 설정된 유저 설정값(setting) 이나 사전에 설정된 워크스페이스 조합을 의미한다.",preset,,
68,,사용자 인터페이스,"사람과 시스템 간의 의사소통을 가능하게 하는 물리적, 가상적 매개체. 사람들이 컴퓨터와 상호 작용하는 시스템, 그리고 상호 작용을 위한 여러 소프트웨어적인 요소를 포함한다. 사용자 인터페이스는 크게 입력, 출력, 삭제 등의 수단을 사용한다.",user interface,ui,
69,,표현 계층,"프레젠테이션 레이어는 UI 레이어를 포함하는 더 넓은 개념. 사용자의 입력을 받고, 이를 비즈니스 로직을 담당하는 다음 계층으로 전달하며, 다시 비즈니스 로직의 처리 결과를 사용자에게 보여주는 모든 로직을 포함한다. UI 레이어가 '무엇을 보여줄지'에 집중한다면, 프레젠테이션 레이어는 '어떻게 보여줄지'와 더불어 사용자와의 상호 작용을 처리하는 방식까지 포함한다.",presentation layer,,
,,창,,window,,
,,메뉴 표시줄,,menu bar,,
,,도구 모음,,tool bar,,
,,측면 표시줄,,side bar,,
,,탭,,tab,,
,,패널,,panel,,
,,대화 상자,,dialog,,
,,상태,,state,,
,,상태 관리,,state management,,
,,접근성,,accessibility,A11y,
,,국제화,,internationalization,i18n,
,,게시-구독 패턴,,publish-subscribe pattern,pubsub,
,,데이터베이스,"여러 사용자(혹은 소프트웨어적인 주체)가 공유하고 관리할 수 있도록 체계화된 데이터의 집합이며, 전자적으로 저장된 정보의 모음",database,db,
,,파일,,file,,
,,정의,,definition,,
